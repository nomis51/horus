<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:icons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia">
    <Design.PreviewWith>
        <Border Padding="20">
            <!-- Add Controls for Previewer Here -->
        </Border>
    </Design.PreviewWith>

    <Style Selector="TextBox.errored[IsReadOnly=False]:not(TextBox:empty)">
        <Setter Property="BorderBrush"
                Value="{StaticResource ErrorColor}" />
    </Style>

    <Style Selector="TextBox.username">
        <Setter Property="InnerLeftContent">
            <Template>
                <icons:MaterialIcon VerticalAlignment="Center"
                                    Kind="AccountCircle"
                                    Height="28"
                                    Width="28"
                                    Margin="5,0,0,0" />
            </Template>
        </Setter>
    </Style>

    <Style Selector="TextBox.attachment">
        <Setter Property="InnerLeftContent">
            <Template>
                <icons:MaterialIcon VerticalAlignment="Center"
                                    Kind="AttachFile"
                                    Height="28"
                                    Width="28"
                                    Margin="5,0,0,0" />
            </Template>
        </Setter>
    </Style>

    <Style Selector="TextBox.url">
        <Setter Property="InnerLeftContent">
            <Template>
                <icons:MaterialIcon VerticalAlignment="Center"
                                    Kind="Web"
                                    Height="28"
                                    Width="28"
                                    Margin="5,0,0,0" />
            </Template>
        </Setter>
    </Style>

    <Style Selector="TextBox.password">
        <Setter Property="InnerLeftContent">
            <Template>
                <icons:MaterialIcon VerticalAlignment="Center"
                                    Kind="Lock"
                                    Height="28"
                                    Width="28"
                                    Margin="5,0,0,0" />
            </Template>
        </Setter>
    </Style>

    <Style Selector="TextBox.confirm[AcceptsReturn=False][IsReadOnly=False]">
        <Setter Property="InnerRightContent">
            <Template>
                <DockPanel>
                    <Border Background="{DynamicResource ThemeAccentBrush}"
                            ToolTip.Placement="Top"
                            ToolTip.Tip="Confirm"
                            ToolTip.VerticalOffset="-5">
                        <Button Theme="{StaticResource FluentTextBoxButton}"
                                x:Name="ButtonConfirm"
                                Cursor="Hand"
                                ClipToBounds="True">
                            <Interaction.Behaviors>
                                <EventTriggerBehavior EventName="Click"
                                                      SourceObject="{Binding #ButtonConfirm}">
                                    <InvokeCommandAction Command="{Binding $parent[TextBox].SelectAll}" />
                                    <InvokeCommandAction Command="{Binding $parent[TextBox].Copy}" />
                                    <InvokeCommandAction Command="{Binding $parent[TextBox].ClearSelection}" />
                                </EventTriggerBehavior>
                            </Interaction.Behaviors>

                            <icons:MaterialIcon Kind="CheckCircle"
                                                Height="20"
                                                Width="20" />
                        </Button>
                    </Border>
                    <Border Background="{DynamicResource ThemeAccentBrush}"
                            ToolTip.Placement="Top"
                            ToolTip.Tip="Cancel"
                            ToolTip.VerticalOffset="-5">
                        <Button Theme="{StaticResource FluentTextBoxButton}"
                                x:Name="ButtonCancel"
                                Cursor="Hand"
                                ClipToBounds="True">
                            <Interaction.Behaviors>
                                <EventTriggerBehavior EventName="Click"
                                                      SourceObject="{Binding #ButtonCancel}">
                                    <InvokeCommandAction Command="{Binding $parent[TextBox].SelectAll}" />
                                    <InvokeCommandAction Command="{Binding $parent[TextBox].Cut}" />
                                    <InvokeCommandAction Command="{Binding $parent[TextBox].ClearSelection}" />
                                </EventTriggerBehavior>
                            </Interaction.Behaviors>

                            <icons:MaterialIcon Kind="CancelCircle"
                                                Height="20"
                                                Width="20" />
                        </Button>
                    </Border>
                </DockPanel>
            </Template>
        </Setter>
    </Style>

    <Style Selector="TextBox.copyButton[AcceptsReturn=False][IsReadOnly=False]:not(TextBox:empty)">
        <Setter Property="InnerRightContent">
            <Template>
                <Border Background="{DynamicResource ThemeAccentBrush}"
                        ToolTip.Placement="Top"
                        ToolTip.Tip="Copy to clipboard"
                        ToolTip.VerticalOffset="-5">
                    <Button Theme="{StaticResource FluentTextBoxButton}"
                            x:Name="ButtonCopyContent"
                            Cursor="Hand"
                            ClipToBounds="True">
                        <Interaction.Behaviors>
                            <EventTriggerBehavior EventName="Click"
                                                  SourceObject="{Binding #ButtonCopyContent}">
                                <InvokeCommandAction Command="{Binding $parent[TextBox].SelectAll}" />
                                <InvokeCommandAction Command="{Binding $parent[TextBox].Copy}" />
                                <InvokeCommandAction Command="{Binding $parent[TextBox].ClearSelection}" />
                            </EventTriggerBehavior>
                        </Interaction.Behaviors>

                        <icons:MaterialIcon Kind="ContentCopy"
                                            Height="20"
                                            Width="20" />
                    </Button>
                </Border>
            </Template>
        </Setter>
    </Style>

    <Style Selector="TextBox.copyButtonSafe[AcceptsReturn=False]">
        <Setter Property="InnerRightContent">
            <Template>
                <Border Background="{DynamicResource ThemeAccentBrush}"
                        ToolTip.Placement="Top"
                        ToolTip.Tip="Copy to clipboard"
                        ToolTip.VerticalOffset="-5">
                    <Button Theme="{StaticResource FluentTextBoxButton}"
                            x:Name="ButtonCopyContent"
                            Cursor="Hand"
                            ClipToBounds="True">
                        <Interaction.Behaviors>
                            <EventTriggerBehavior EventName="Click"
                                                  SourceObject="{Binding #ButtonCopyContent}">
                                <InvokeCommandAction Command="{Binding $parent[TextBox].SelectAll}" />
                                <InvokeCommandAction Command="{Binding $parent[TextBox].Copy}" />
                                <InvokeCommandAction Command="{Binding $parent[TextBox].ClearSelection}" />
                            </EventTriggerBehavior>
                        </Interaction.Behaviors>

                        <icons:MaterialIcon Kind="ContentCopy"
                                            Height="20"
                                            Width="20" />
                    </Button>
                </Border>
            </Template>
        </Setter>
    </Style>

    <Style Selector="TextBox.clearButton[AcceptsReturn=False][IsReadOnly=False]:not(TextBox:empty)">
        <Setter Property="InnerRightContent">
            <Template>
                <Border Background="{DynamicResource ThemeAccentBrush}"
                        ToolTip.Placement="Top"
                        ToolTip.Tip="Clear the field"
                        ToolTip.VerticalOffset="-5">
                    <Button Theme="{StaticResource FluentTextBoxButton}"
                            Command="{Binding $parent[TextBox].Clear}"
                            Cursor="Hand"
                            ClipToBounds="True">
                        <icons:MaterialIcon Kind="Close"
                                            Height="20"
                                            Width="20" />
                    </Button>
                </Border>
            </Template>
        </Setter>
    </Style>

    <Style Selector="TextBox.download:not(TextBox:empty)">
        <Setter Property="InnerRightContent">
            <Template>
                <Border Background="{DynamicResource ThemeAccentBrush}"
                        ToolTip.Placement="Top"
                        ToolTip.Tip="Save the file"
                        ToolTip.VerticalOffset="-5">
                    <Button Theme="{StaticResource FluentTextBoxButton}"
                            x:Name="ButtonDownloadContent"
                            Cursor="Hand"
                            ClipToBounds="True">
                        <Interaction.Behaviors>
                            <EventTriggerBehavior EventName="Click"
                                                  SourceObject="{Binding #ButtonDownloadContent}">
                                <InvokeCommandAction Command="{Binding $parent[TextBox].SelectAll}" />
                                <InvokeCommandAction Command="{Binding $parent[TextBox].Copy}" />
                                <InvokeCommandAction Command="{Binding $parent[TextBox].ClearSelection}" />
                            </EventTriggerBehavior>
                        </Interaction.Behaviors>

                        <icons:MaterialIcon Kind="Download"
                                            Height="20"
                                            Width="20" />
                    </Button>
                </Border>
            </Template>
        </Setter>
    </Style>

    <Style Selector="TextBox.clearButtonAndCopyButton[AcceptsReturn=False][IsReadOnly=False]:not(TextBox:empty)">
        <Setter Property="InnerRightContent">
            <Template>
                <DockPanel>
                    <Border Background="{DynamicResource ThemeAccentBrush}"
                            ToolTip.Placement="Top"
                            ToolTip.Tip="Copy to clipboard"
                            ToolTip.VerticalOffset="-5">
                        <Button Theme="{StaticResource FluentTextBoxButton}"
                                x:Name="ButtonCopyContent"
                                Cursor="Hand"
                                ClipToBounds="True">
                            <Interaction.Behaviors>
                                <EventTriggerBehavior EventName="Click"
                                                      SourceObject="{Binding #ButtonCopyContent}">
                                    <InvokeCommandAction Command="{Binding $parent[TextBox].SelectAll}" />
                                    <InvokeCommandAction Command="{Binding $parent[TextBox].Copy}" />
                                    <InvokeCommandAction Command="{Binding $parent[TextBox].ClearSelection}" />
                                </EventTriggerBehavior>
                            </Interaction.Behaviors>

                            <icons:MaterialIcon Kind="ContentCopy"
                                                Height="20"
                                                Width="20" />
                        </Button>
                    </Border>
                    <Border Background="{DynamicResource ThemeAccentBrush}"
                            ToolTip.Placement="Top"
                            ToolTip.Tip="Clear the field"
                            ToolTip.VerticalOffset="-5">
                        <Button Theme="{StaticResource FluentTextBoxButton}"
                                Command="{Binding $parent[TextBox].Clear}"
                                Cursor="Hand"
                                ClipToBounds="True">
                            <icons:MaterialIcon Kind="Close"
                                                Height="20"
                                                Width="20" />
                        </Button>
                    </Border>
                </DockPanel>
            </Template>
        </Setter>
    </Style>

    <Style
        Selector="TextBox.clearButtonAndOpenLinkButtonAndCopyButton[AcceptsReturn=False][IsReadOnly=False]:not(TextBox:empty)">
        <Setter Property="InnerRightContent">
            <Template>
                <DockPanel>
                    <Border Background="{DynamicResource ThemeAccentBrush}"
                            ToolTip.Placement="Top"
                            ToolTip.Tip="Copy to clipboard"
                            ToolTip.VerticalOffset="-5">
                        <Button Theme="{StaticResource FluentTextBoxButton}"
                                x:Name="ButtonCopyContent"
                                Cursor="Hand"
                                ClipToBounds="True">
                            <Interaction.Behaviors>
                                <EventTriggerBehavior EventName="Click"
                                                      SourceObject="{Binding #ButtonCopyContent}">
                                    <InvokeCommandAction Command="{Binding $parent[TextBox].SelectAll}" />
                                    <InvokeCommandAction Command="{Binding $parent[TextBox].Copy}" />
                                    <InvokeCommandAction Command="{Binding $parent[TextBox].ClearSelection}" />
                                </EventTriggerBehavior>
                            </Interaction.Behaviors>

                            <icons:MaterialIcon Kind="ContentCopy"
                                                Height="20"
                                                Width="20" />
                        </Button>
                    </Border>
                    <Border Background="{DynamicResource ThemeAccentBrush}"
                            ToolTip.Placement="Top"
                            ToolTip.Tip="Open URL in the web browser"
                            ToolTip.VerticalOffset="-5">
                        <Button Theme="{StaticResource FluentTextBoxButton}"
                                x:Name="ButtonOpenLink"
                                Cursor="Hand"
                                ClipToBounds="True">
                            <Interaction.Behaviors>
                                <EventTriggerBehavior EventName="Click"
                                                      SourceObject="{Binding #ButtonOpenLink}">
                                    <InvokeCommandAction Command="{Binding $parent[TextBox].SelectAll}" />
                                    <InvokeCommandAction Command="{Binding $parent[TextBox].Cut}" />
                                    <InvokeCommandAction Command="{Binding $parent[TextBox].ClearSelection}" />
                                </EventTriggerBehavior>
                            </Interaction.Behaviors>

                            <icons:MaterialIcon Kind="OpenInBrowser"
                                                Height="20"
                                                Width="20" />
                        </Button>
                    </Border>
                    <Border Background="{DynamicResource ThemeAccentBrush}"
                            ToolTip.Placement="Top"
                            ToolTip.Tip="Clear the field"
                            ToolTip.VerticalOffset="-5">
                        <Button Theme="{StaticResource FluentTextBoxButton}"
                                Command="{Binding $parent[TextBox].Clear}"
                                Cursor="Hand"
                                ClipToBounds="True">
                            <icons:MaterialIcon Kind="Close"
                                                Height="20"
                                                Width="20" />
                        </Button>
                    </Border>
                </DockPanel>
            </Template>
        </Setter>
    </Style>

    <Style
        Selector="TextBox.revealPasswordButtonAndClearButtonAndCopyButton[AcceptsReturn=False][IsReadOnly=False]:not(TextBox:empty)">
        <Setter Property="InnerRightContent">
            <Template>
                <DockPanel>
                    <Border Background="{DynamicResource ThemeAccentBrush}"
                            ToolTip.Placement="Top"
                            ToolTip.Tip="Copy to clipboard"
                            ToolTip.VerticalOffset="-5">
                        <Button Theme="{StaticResource FluentTextBoxButton}"
                                x:Name="ButtonCopyContent"
                                Cursor="Hand"
                                ClipToBounds="True">
                            <Interaction.Behaviors>
                                <EventTriggerBehavior EventName="Click"
                                                      SourceObject="{Binding #ButtonCopyContent}">
                                    <InvokeCommandAction Command="{Binding $parent[TextBox].SelectAll}" />
                                    <InvokeCommandAction Command="{Binding $parent[TextBox].Copy}" />
                                    <InvokeCommandAction Command="{Binding $parent[TextBox].ClearSelection}" />
                                </EventTriggerBehavior>
                            </Interaction.Behaviors>

                            <icons:MaterialIcon Kind="ContentCopy"
                                                Height="20"
                                                Width="20" />
                        </Button>
                    </Border>
                    <Border Background="{DynamicResource ThemeAccentBrush}"
                            ToolTip.Placement="Top"
                            ToolTip.Tip="Show / hide the password"
                            ToolTip.VerticalOffset="-5">
                        <ToggleButton Theme="{StaticResource FluentTextBoxToggleButton}"
                                      Cursor="Hand"
                                      IsChecked="{Binding $parent[TextBox].RevealPassword, Mode=TwoWay}"
                                      ClipToBounds="True">
                            <Panel>
                                <icons:MaterialIcon Kind="Visibility"
                                                    Height="20"
                                                    Width="20"
                                                    IsVisible="{Binding !$parent[ToggleButton].IsChecked}" />
                                <icons:MaterialIcon Kind="VisibilityOff"
                                                    Height="20"
                                                    Width="20"
                                                    IsVisible="{Binding $parent[ToggleButton].IsChecked}" />
                            </Panel>
                        </ToggleButton>
                    </Border>
                    <Border Background="{DynamicResource ThemeAccentBrush}"
                            ToolTip.Placement="Top"
                            ToolTip.Tip="Clear the field"
                            ToolTip.VerticalOffset="-5">
                        <Button Theme="{StaticResource FluentTextBoxButton}"
                                Command="{Binding $parent[TextBox].Clear}"
                                Cursor="Hand"
                                ClipToBounds="True">
                            <icons:MaterialIcon Kind="Close"
                                                Height="20"
                                                Width="20" />
                        </Button>
                    </Border>
                </DockPanel>
            </Template>
        </Setter>
    </Style>
</Styles>